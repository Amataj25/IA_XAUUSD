(trading_env) C:\Users\Amataj\Proyectos\trading_env\trading_env\scripts>python automate_all.py
MAE: 31.86248274475634
RMSE: 425.9178714775915
Fitting 3 folds for each of 50 candidates, totalling 150 fits
[CV] END max_depth=16, max_features=auto, min_samples_leaf=3, min_samples_split=4, n_estimators=171; total time=   0.0s
[CV] END max_depth=16, max_features=auto, min_samples_leaf=3, min_samples_split=4, n_estimators=171; total time=   0.0s
[CV] END max_depth=16, max_features=auto, min_samples_leaf=3, min_samples_split=4, n_estimators=171; total time=   0.0s
[CV] END max_depth=20, max_features=auto, min_samples_leaf=3, min_samples_split=7, n_estimators=152; total time=   0.0s
[CV] END max_depth=20, max_features=auto, min_samples_leaf=3, min_samples_split=7, n_estimators=152; total time=   0.0s
[CV] END max_depth=20, max_features=auto, min_samples_leaf=3, min_samples_split=7, n_estimators=152; total time=   0.0s
[CV] END max_depth=16, max_features=sqrt, min_samples_leaf=3, min_samples_split=8, n_estimators=174; total time=   0.6s
[CV] END max_depth=16, max_features=sqrt, min_samples_leaf=3, min_samples_split=8, n_estimators=174; total time=   0.6s
[CV] END max_depth=16, max_features=sqrt, min_samples_leaf=3, min_samples_split=8, n_estimators=174; total time=   0.6s
[CV] END max_depth=11, max_features=sqrt, min_samples_leaf=2, min_samples_split=3, n_estimators=291; total time=   1.1s
[CV] END max_depth=10, max_features=sqrt, min_samples_leaf=2, min_samples_split=6, n_estimators=188; total time=   0.6s
[CV] END max_depth=11, max_features=sqrt, min_samples_leaf=2, min_samples_split=3, n_estimators=291; total time=   1.1s
[CV] END max_depth=11, max_features=sqrt, min_samples_leaf=2, min_samples_split=3, n_estimators=291; total time=   1.1s
[CV] END max_depth=10, max_features=sqrt, min_samples_leaf=2, min_samples_split=6, n_estimators=188; total time=   0.7s
[CV] END max_depth=10, max_features=sqrt, min_samples_leaf=2, min_samples_split=6, n_estimators=188; total time=   0.7s
[CV] END max_depth=26, max_features=log2, min_samples_leaf=3, min_samples_split=8, n_estimators=269; total time=   0.9s
[CV] END max_depth=26, max_features=log2, min_samples_leaf=3, min_samples_split=8, n_estimators=269; total time=   0.9s
[CV] END max_depth=26, max_features=log2, min_samples_leaf=3, min_samples_split=8, n_estimators=269; total time=   0.9s
[CV] END max_depth=25, max_features=log2, min_samples_leaf=2, min_samples_split=7, n_estimators=274; total time=   0.9s
[CV] END max_depth=28, max_features=log2, min_samples_leaf=1, min_samples_split=4, n_estimators=150; total time=   0.5s
[CV] END max_depth=25, max_features=log2, min_samples_leaf=2, min_samples_split=7, n_estimators=274; total time=   0.9s
[CV] END max_depth=16, max_features=auto, min_samples_leaf=1, min_samples_split=8, n_estimators=117; total time=   0.0s
[CV] END max_depth=16, max_features=auto, min_samples_leaf=1, min_samples_split=8, n_estimators=117; total time=   0.0s
[CV] END max_depth=16, max_features=auto, min_samples_leaf=1, min_samples_split=8, n_estimators=117; total time=   0.0s
[CV] END max_depth=13, max_features=auto, min_samples_leaf=2, min_samples_split=3, n_estimators=108; total time=   0.0s
[CV] END max_depth=13, max_features=auto, min_samples_leaf=2, min_samples_split=3, n_estimators=108; total time=   0.0s
[CV] END max_depth=13, max_features=auto, min_samples_leaf=2, min_samples_split=3, n_estimators=108; total time=   0.0s
[CV] END max_depth=25, max_features=log2, min_samples_leaf=2, min_samples_split=7, n_estimators=274; total time=   1.0s
[CV] END max_depth=28, max_features=log2, min_samples_leaf=1, min_samples_split=4, n_estimators=150; total time=   0.5s
[CV] END max_depth=11, max_features=log2, min_samples_leaf=3, min_samples_split=5, n_estimators=107; total time=   0.3s
[CV] END max_depth=28, max_features=log2, min_samples_leaf=1, min_samples_split=4, n_estimators=150; total time=   0.6s
[CV] END max_depth=11, max_features=log2, min_samples_leaf=3, min_samples_split=5, n_estimators=107; total time=   0.3s
[CV] END max_depth=11, max_features=log2, min_samples_leaf=3, min_samples_split=5, n_estimators=107; total time=   0.3s
[CV] END max_depth=27, max_features=sqrt, min_samples_leaf=2, min_samples_split=7, n_estimators=153; total time=   0.5s
[CV] END max_depth=24, max_features=log2, min_samples_leaf=2, min_samples_split=2, n_estimators=263; total time=   1.0s
[CV] END max_depth=24, max_features=log2, min_samples_leaf=2, min_samples_split=2, n_estimators=263; total time=   0.9s
[CV] END max_depth=24, max_features=log2, min_samples_leaf=2, min_samples_split=2, n_estimators=263; total time=   1.0s
[CV] END max_depth=27, max_features=sqrt, min_samples_leaf=2, min_samples_split=7, n_estimators=153; total time=   0.5s
[CV] END max_depth=27, max_features=sqrt, min_samples_leaf=2, min_samples_split=7, n_estimators=153; total time=   0.5s
[CV] END max_depth=21, max_features=sqrt, min_samples_leaf=2, min_samples_split=7, n_estimators=113; total time=   0.3s
[CV] END max_depth=19, max_features=sqrt, min_samples_leaf=1, min_samples_split=8, n_estimators=245; total time=   0.8s
[CV] END max_depth=19, max_features=sqrt, min_samples_leaf=1, min_samples_split=8, n_estimators=245; total time=   0.8s
[CV] END max_depth=19, max_features=sqrt, min_samples_leaf=1, min_samples_split=8, n_estimators=245; total time=   0.9s
[CV] END max_depth=21, max_features=sqrt, min_samples_leaf=2, min_samples_split=7, n_estimators=113; total time=   0.3s
[CV] END max_depth=21, max_features=sqrt, min_samples_leaf=2, min_samples_split=7, n_estimators=113; total time=   0.3s
[CV] END max_depth=17, max_features=auto, min_samples_leaf=1, min_samples_split=3, n_estimators=210; total time=   0.0s
[CV] END max_depth=17, max_features=auto, min_samples_leaf=1, min_samples_split=3, n_estimators=210; total time=   0.0s
[CV] END max_depth=17, max_features=auto, min_samples_leaf=1, min_samples_split=3, n_estimators=210; total time=   0.0s
[CV] END max_depth=22, max_features=auto, min_samples_leaf=1, min_samples_split=8, n_estimators=144; total time=   0.0s
[CV] END max_depth=22, max_features=auto, min_samples_leaf=1, min_samples_split=8, n_estimators=144; total time=   0.0s
[CV] END max_depth=22, max_features=auto, min_samples_leaf=1, min_samples_split=8, n_estimators=144; total time=   0.0s
[CV] END max_depth=10, max_features=auto, min_samples_leaf=3, min_samples_split=2, n_estimators=187; total time=   0.0s
[CV] END max_depth=10, max_features=auto, min_samples_leaf=3, min_samples_split=2, n_estimators=187; total time=   0.0s
[CV] END max_depth=10, max_features=auto, min_samples_leaf=3, min_samples_split=2, n_estimators=187; total time=   0.0s
[CV] END max_depth=25, max_features=log2, min_samples_leaf=2, min_samples_split=8, n_estimators=289; total time=   1.0s
[CV] END max_depth=10, max_features=log2, min_samples_leaf=3, min_samples_split=4, n_estimators=180; total time=   0.6s
[CV] END max_depth=25, max_features=log2, min_samples_leaf=2, min_samples_split=8, n_estimators=289; total time=   1.0s
[CV] END max_depth=25, max_features=log2, min_samples_leaf=2, min_samples_split=8, n_estimators=289; total time=   1.0s
[CV] END max_depth=10, max_features=log2, min_samples_leaf=3, min_samples_split=4, n_estimators=180; total time=   0.5s
[CV] END max_depth=10, max_features=log2, min_samples_leaf=3, min_samples_split=4, n_estimators=180; total time=   0.6s
[CV] END max_depth=17, max_features=log2, min_samples_leaf=3, min_samples_split=2, n_estimators=222; total time=   0.7s
[CV] END max_depth=17, max_features=log2, min_samples_leaf=3, min_samples_split=2, n_estimators=222; total time=   0.7s
[CV] END max_depth=14, max_features=sqrt, min_samples_leaf=3, min_samples_split=3, n_estimators=140; total time=   0.4s
[CV] END max_depth=16, max_features=auto, min_samples_leaf=2, min_samples_split=2, n_estimators=147; total time=   0.0s
[CV] END max_depth=16, max_features=auto, min_samples_leaf=2, min_samples_split=2, n_estimators=147; total time=   0.0s
[CV] END max_depth=16, max_features=auto, min_samples_leaf=2, min_samples_split=2, n_estimators=147; total time=   0.0s
[CV] END max_depth=17, max_features=log2, min_samples_leaf=3, min_samples_split=2, n_estimators=222; total time=   0.7s
[CV] END max_depth=14, max_features=sqrt, min_samples_leaf=3, min_samples_split=3, n_estimators=140; total time=   0.4s
[CV] END max_depth=14, max_features=sqrt, min_samples_leaf=3, min_samples_split=3, n_estimators=140; total time=   0.5s
[CV] END max_depth=14, max_features=log2, min_samples_leaf=2, min_samples_split=4, n_estimators=134; total time=   0.5s
[CV] END max_depth=14, max_features=log2, min_samples_leaf=2, min_samples_split=4, n_estimators=134; total time=   0.5s
[CV] END max_depth=14, max_features=log2, min_samples_leaf=2, min_samples_split=4, n_estimators=134; total time=   0.4s
[CV] END max_depth=10, max_features=auto, min_samples_leaf=2, min_samples_split=8, n_estimators=241; total time=   0.0s
[CV] END max_depth=10, max_features=auto, min_samples_leaf=2, min_samples_split=8, n_estimators=241; total time=   0.0s
[CV] END max_depth=10, max_features=auto, min_samples_leaf=2, min_samples_split=8, n_estimators=241; total time=   0.0s
[CV] END max_depth=16, max_features=log2, min_samples_leaf=1, min_samples_split=8, n_estimators=114; total time=   0.3s
[CV] END max_depth=10, max_features=log2, min_samples_leaf=1, min_samples_split=8, n_estimators=230; total time=   0.7s
[CV] END max_depth=10, max_features=log2, min_samples_leaf=1, min_samples_split=8, n_estimators=230; total time=   0.8s
[CV] END max_depth=19, max_features=auto, min_samples_leaf=3, min_samples_split=8, n_estimators=195; total time=   0.0s
[CV] END max_depth=19, max_features=auto, min_samples_leaf=3, min_samples_split=8, n_estimators=195; total time=   0.0s
[CV] END max_depth=19, max_features=auto, min_samples_leaf=3, min_samples_split=8, n_estimators=195; total time=   0.0s
[CV] END max_depth=16, max_features=auto, min_samples_leaf=1, min_samples_split=9, n_estimators=231; total time=   0.0s
[CV] END max_depth=16, max_features=auto, min_samples_leaf=1, min_samples_split=9, n_estimators=231; total time=   0.0s
[CV] END max_depth=16, max_features=auto, min_samples_leaf=1, min_samples_split=9, n_estimators=231; total time=   0.0s
[CV] END max_depth=10, max_features=log2, min_samples_leaf=1, min_samples_split=8, n_estimators=230; total time=   0.8s
[CV] END max_depth=16, max_features=log2, min_samples_leaf=1, min_samples_split=8, n_estimators=114; total time=   0.4s
[CV] END max_depth=16, max_features=log2, min_samples_leaf=1, min_samples_split=8, n_estimators=114; total time=   0.4s
[CV] END max_depth=20, max_features=auto, min_samples_leaf=1, min_samples_split=9, n_estimators=170; total time=   0.0s
[CV] END max_depth=20, max_features=auto, min_samples_leaf=1, min_samples_split=9, n_estimators=170; total time=   0.0s
[CV] END max_depth=20, max_features=auto, min_samples_leaf=1, min_samples_split=9, n_estimators=170; total time=   0.0s
[CV] END max_depth=14, max_features=log2, min_samples_leaf=3, min_samples_split=6, n_estimators=242; total time=   0.8s
[CV] END max_depth=28, max_features=sqrt, min_samples_leaf=2, min_samples_split=3, n_estimators=144; total time=   0.5s
[CV] END max_depth=14, max_features=log2, min_samples_leaf=3, min_samples_split=6, n_estimators=242; total time=   0.8s
[CV] END max_depth=14, max_features=log2, min_samples_leaf=3, min_samples_split=6, n_estimators=242; total time=   0.8s
[CV] END max_depth=28, max_features=sqrt, min_samples_leaf=2, min_samples_split=3, n_estimators=144; total time=   0.5s
[CV] END max_depth=28, max_features=sqrt, min_samples_leaf=2, min_samples_split=3, n_estimators=144; total time=   0.5s
[CV] END max_depth=15, max_features=sqrt, min_samples_leaf=2, min_samples_split=4, n_estimators=227; total time=   0.8s
[CV] END max_depth=15, max_features=sqrt, min_samples_leaf=2, min_samples_split=4, n_estimators=227; total time=   0.8s
[CV] END max_depth=15, max_features=sqrt, min_samples_leaf=2, min_samples_split=4, n_estimators=227; total time=   0.8s
[CV] END max_depth=29, max_features=auto, min_samples_leaf=1, min_samples_split=4, n_estimators=202; total time=   0.0s
[CV] END max_depth=29, max_features=auto, min_samples_leaf=1, min_samples_split=4, n_estimators=202; total time=   0.0s
[CV] END max_depth=29, max_features=auto, min_samples_leaf=1, min_samples_split=4, n_estimators=202; total time=   0.0s
[CV] END max_depth=16, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, n_estimators=220; total time=   0.9s
[CV] END max_depth=16, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, n_estimators=220; total time=   0.9s
[CV] END max_depth=16, max_features=sqrt, min_samples_leaf=1, min_samples_split=2, n_estimators=220; total time=   0.9s
[CV] END max_depth=15, max_features=log2, min_samples_leaf=1, min_samples_split=7, n_estimators=264; total time=   0.9s
[CV] END max_depth=15, max_features=log2, min_samples_leaf=1, min_samples_split=7, n_estimators=264; total time=   0.9s
[CV] END max_depth=15, max_features=log2, min_samples_leaf=1, min_samples_split=7, n_estimators=264; total time=   0.9s
[CV] END max_depth=10, max_features=log2, min_samples_leaf=2, min_samples_split=5, n_estimators=251; total time=   0.8s
[CV] END max_depth=10, max_features=log2, min_samples_leaf=2, min_samples_split=5, n_estimators=251; total time=   0.8s
[CV] END max_depth=10, max_features=log2, min_samples_leaf=2, min_samples_split=5, n_estimators=251; total time=   0.8s
[CV] END max_depth=18, max_features=auto, min_samples_leaf=2, min_samples_split=2, n_estimators=285; total time=   0.0s
[CV] END max_depth=18, max_features=auto, min_samples_leaf=2, min_samples_split=2, n_estimators=285; total time=   0.0s
[CV] END max_depth=18, max_features=auto, min_samples_leaf=2, min_samples_split=2, n_estimators=285; total time=   0.0s
[CV] END max_depth=24, max_features=log2, min_samples_leaf=2, min_samples_split=9, n_estimators=195; total time=   0.6s
[CV] END max_depth=24, max_features=log2, min_samples_leaf=2, min_samples_split=9, n_estimators=195; total time=   0.6s
[CV] END max_depth=24, max_features=log2, min_samples_leaf=2, min_samples_split=9, n_estimators=195; total time=   0.6s
[CV] END max_depth=26, max_features=auto, min_samples_leaf=1, min_samples_split=9, n_estimators=180; total time=   0.0s
[CV] END max_depth=26, max_features=auto, min_samples_leaf=1, min_samples_split=9, n_estimators=180; total time=   0.0s
[CV] END max_depth=26, max_features=auto, min_samples_leaf=1, min_samples_split=9, n_estimators=180; total time=   0.0s
[CV] END max_depth=29, max_features=sqrt, min_samples_leaf=3, min_samples_split=3, n_estimators=230; total time=   0.7s
[CV] END max_depth=29, max_features=sqrt, min_samples_leaf=3, min_samples_split=3, n_estimators=230; total time=   0.8s
[CV] END max_depth=29, max_features=sqrt, min_samples_leaf=3, min_samples_split=3, n_estimators=230; total time=   0.8s
[CV] END max_depth=14, max_features=auto, min_samples_leaf=1, min_samples_split=4, n_estimators=225; total time=   0.0s
[CV] END max_depth=14, max_features=auto, min_samples_leaf=1, min_samples_split=4, n_estimators=225; total time=   0.0s
[CV] END max_depth=14, max_features=auto, min_samples_leaf=1, min_samples_split=4, n_estimators=225; total time=   0.0s
[CV] END max_depth=11, max_features=auto, min_samples_leaf=2, min_samples_split=9, n_estimators=297; total time=   0.0s
[CV] END max_depth=11, max_features=auto, min_samples_leaf=2, min_samples_split=9, n_estimators=297; total time=   0.0s
[CV] END max_depth=11, max_features=auto, min_samples_leaf=2, min_samples_split=9, n_estimators=297; total time=   0.0s
[CV] END max_depth=26, max_features=sqrt, min_samples_leaf=2, min_samples_split=5, n_estimators=153; total time=   0.5s
[CV] END max_depth=26, max_features=sqrt, min_samples_leaf=2, min_samples_split=5, n_estimators=153; total time=   0.5s
[CV] END max_depth=26, max_features=sqrt, min_samples_leaf=2, min_samples_split=5, n_estimators=153; total time=   0.5s
[CV] END max_depth=13, max_features=log2, min_samples_leaf=3, min_samples_split=9, n_estimators=222; total time=   0.7s
[CV] END max_depth=13, max_features=log2, min_samples_leaf=3, min_samples_split=9, n_estimators=222; total time=   0.7s
[CV] END max_depth=26, max_features=log2, min_samples_leaf=2, min_samples_split=9, n_estimators=168; total time=   0.5s
[CV] END max_depth=13, max_features=log2, min_samples_leaf=3, min_samples_split=9, n_estimators=222; total time=   0.7s
[CV] END max_depth=26, max_features=log2, min_samples_leaf=2, min_samples_split=9, n_estimators=168; total time=   0.5s
[CV] END max_depth=26, max_features=log2, min_samples_leaf=2, min_samples_split=9, n_estimators=168; total time=   0.5s
[CV] END max_depth=25, max_features=auto, min_samples_leaf=1, min_samples_split=5, n_estimators=286; total time=   0.0s
[CV] END max_depth=25, max_features=auto, min_samples_leaf=1, min_samples_split=5, n_estimators=286; total time=   0.0s
[CV] END max_depth=25, max_features=auto, min_samples_leaf=1, min_samples_split=5, n_estimators=286; total time=   0.0s
[CV] END max_depth=15, max_features=auto, min_samples_leaf=3, min_samples_split=5, n_estimators=286; total time=   0.0s
[CV] END max_depth=15, max_features=auto, min_samples_leaf=3, min_samples_split=5, n_estimators=286; total time=   0.0s
[CV] END max_depth=15, max_features=auto, min_samples_leaf=3, min_samples_split=5, n_estimators=286; total time=   0.0s
[CV] END max_depth=29, max_features=sqrt, min_samples_leaf=2, min_samples_split=7, n_estimators=238; total time=   0.8s
[CV] END max_depth=29, max_features=sqrt, min_samples_leaf=2, min_samples_split=7, n_estimators=238; total time=   0.8s
[CV] END max_depth=29, max_features=sqrt, min_samples_leaf=2, min_samples_split=7, n_estimators=238; total time=   0.8s
[CV] END max_depth=13, max_features=log2, min_samples_leaf=2, min_samples_split=4, n_estimators=246; total time=   0.9s
[CV] END max_depth=13, max_features=log2, min_samples_leaf=2, min_samples_split=4, n_estimators=246; total time=   0.8s
[CV] END max_depth=13, max_features=log2, min_samples_leaf=2, min_samples_split=4, n_estimators=246; total time=   0.9s
E:\Proyecto\Lib\site-packages\sklearn\model_selection\_validation.py:540: FitFailedWarning:
57 fits failed out of a total of 150.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
13 fits failed with the following error:
Traceback (most recent call last):
  File "E:\Proyecto\Lib\site-packages\sklearn\model_selection\_validation.py", line 888, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "E:\Proyecto\Lib\site-packages\sklearn\base.py", line 1466, in wrapper
    estimator._validate_params()
  File "E:\Proyecto\Lib\site-packages\sklearn\base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "E:\Proyecto\Lib\site-packages\sklearn\utils\_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'max_features' parameter of RandomForestRegressor must be an int in the range [1, inf), a float in the range (0.0, 1.0], a str among {'sqrt', 'log2'} or None. Got 'auto' instead.

--------------------------------------------------------------------------------
44 fits failed with the following error:
Traceback (most recent call last):
  File "E:\Proyecto\Lib\site-packages\sklearn\model_selection\_validation.py", line 888, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "E:\Proyecto\Lib\site-packages\sklearn\base.py", line 1466, in wrapper
    estimator._validate_params()
  File "E:\Proyecto\Lib\site-packages\sklearn\base.py", line 666, in _validate_params
    validate_parameter_constraints(
  File "E:\Proyecto\Lib\site-packages\sklearn\utils\_param_validation.py", line 95, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'max_features' parameter of RandomForestRegressor must be an int in the range [1, inf), a float in the range (0.0, 1.0], a str among {'log2', 'sqrt'} or None. Got 'auto' instead.

  warnings.warn(some_fits_failed_message, FitFailedWarning)
E:\Proyecto\Lib\site-packages\sklearn\model_selection\_search.py:1102: UserWarning: One or more of the test scores are non-finite: [       nan 0.98561145        nan 0.98620413 0.98613983 0.98641453
 0.98492672 0.98422922        nan        nan 0.98701419 0.98603511
 0.98584888 0.98498927 0.98524424 0.98621286        nan        nan
        nan 0.98670939 0.98560608 0.98507916        nan 0.98649939
 0.98521253        nan 0.9837016         nan        nan 0.98631093
        nan 0.98483545 0.98624756 0.98555294        nan 0.98443385
 0.98685212 0.98690632        nan 0.9863551         nan 0.98623246
        nan        nan 0.98600722 0.98600536 0.98562505        nan
        nan 0.9861204 ]
  warnings.warn(
Mejores parámetros: {'max_depth': 11, 'max_features': 'log2', 'min_samples_leaf': 3, 'min_samples_split': 5, 'n_estimators': 107}
Traceback (most recent call last):
  File "C:\Users\Amataj\Proyectos\trading_env\trading_env\scripts\model_comparison.py", line 5, in <module>
    from xgboost import XGBRegressor
ModuleNotFoundError: No module named 'xgboost'
Traceback (most recent call last):
  File "E:\Proyecto\Lib\site-packages\urllib3\util\url.py", line 440, in parse_url
    host = _normalize_host(host, scheme)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Proyecto\Lib\site-packages\urllib3\util\url.py", line 326, in _normalize_host
    b".".join([_idna_encode(label) for label in host.split(".")]),
               ^^^^^^^^^^^^^^^^^^^
  File "E:\Proyecto\Lib\site-packages\urllib3\util\url.py", line 344, in _idna_encode
    raise LocationParseError(
urllib3.exceptions.LocationParseError: Failed to parse: Name 'API_URL_PARA_TASA_DE_INTERÉS' is not a valid IDNA label

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "E:\Proyecto\Lib\site-packages\requests\models.py", line 433, in prepare_url
    scheme, auth, host, port, path, query, fragment = parse_url(url)
                                                      ^^^^^^^^^^^^^^
  File "E:\Proyecto\Lib\site-packages\urllib3\util\url.py", line 451, in parse_url
    raise LocationParseError(source_url) from e
urllib3.exceptions.LocationParseError: Failed to parse: API_URL_PARA_TASA_DE_INTERÉS

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Amataj\Proyectos\trading_env\trading_env\scripts\additional_data_integration.py", line 9, in <module>
    response = requests.get(interest_rate_url)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Proyecto\Lib\site-packages\requests\api.py", line 73, in get
    return request("get", url, params=params, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Proyecto\Lib\site-packages\requests\api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Proyecto\Lib\site-packages\requests\sessions.py", line 575, in request
    prep = self.prepare_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\Proyecto\Lib\site-packages\requests\sessions.py", line 484, in prepare_request
    p.prepare(
  File "E:\Proyecto\Lib\site-packages\requests\models.py", line 367, in prepare
    self.prepare_url(url, params)
  File "E:\Proyecto\Lib\site-packages\requests\models.py", line 435, in prepare_url
    raise InvalidURL(*e.args)
requests.exceptions.InvalidURL: Failed to parse: API_URL_PARA_TASA_DE_INTERÉS
MAE promedio: 1084.3041944055944
C:\Users\Amataj\Proyectos\trading_env\trading_env\scripts\backtesting.py:19: FutureWarning: ChainedAssignmentError: behaviour will change in pandas 3.0!
You are setting values through chained assignment. Currently this works in certain cases, but when using Copy-on-Write (which will become the default behaviour in pandas 3.0) this will never work to update the original DataFrame or Series, because the intermediate object on which we are setting values will behave as a copy.
A typical example is when you are setting values in a column of a DataFrame, like:

df["col"][row_indexer] = value

Use `df.loc[row_indexer, "col"] = values` instead, to perform the assignment in a single step and ensure this keeps updating the original `df`.

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

  data['Signal'][data['Prediction'].shift(1) < data['Prediction']] = 1
C:\Users\Amataj\Proyectos\trading_env\trading_env\scripts\backtesting.py:19: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['Signal'][data['Prediction'].shift(1) < data['Prediction']] = 1
C:\Users\Amataj\Proyectos\trading_env\trading_env\scripts\backtesting.py:20: FutureWarning: ChainedAssignmentError: behaviour will change in pandas 3.0!
You are setting values through chained assignment. Currently this works in certain cases, but when using Copy-on-Write (which will become the default behaviour in pandas 3.0) this will never work to update the original DataFrame or Series, because the intermediate object on which we are setting values will behave as a copy.
A typical example is when you are setting values in a column of a DataFrame, like:

df["col"][row_indexer] = value

Use `df.loc[row_indexer, "col"] = values` instead, to perform the assignment in a single step and ensure this keeps updating the original `df`.

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

  data['Signal'][data['Prediction'].shift(1) > data['Prediction']] = -1
C:\Users\Amataj\Proyectos\trading_env\trading_env\scripts\backtesting.py:20: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data['Signal'][data['Prediction'].shift(1) > data['Prediction']] = -1
C:\Users\Amataj\Proyectos\trading_env\trading_env\scripts\backtesting.py:25: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  print("Rendimiento acumulado:", cumulative_return[-1])
Rendimiento acumulado: 263327.6118946041
Traceback (most recent call last):
  File "C:\Users\Amataj\Proyectos\trading_env\trading_env\scripts\monitor_and_trade.py", line 11, in <module>
    mt5.login(login=TU_NUMERO_DE_CUENTA, password=TU_CONTRASEÑA, server='NOMBRE_DEL_SERVIDOR')
                    ^^^^^^^^^^^^^^^^^^^
NameError: name 'TU_NUMERO_DE_CUENTA' is not defined
